모델 부분 발표 시작하겠습니다.

객체 탐지를 위한 모델은 여러가지가 존재합니다
앞써 보셨다시피 
저희에게 테스크로 주어진 것은 
고정된 CCTV화면이고 
이 화면의 객체 탐지를 해야했습니다.
 표에서 보시다시피 탐지력이나 처리속도 등에서 
타 모델에 비해 수하여 
욜로 모델을 선택하게 되었습니다.

또한 yolo는 여러 버전이 존재합니다. 

그 중에서 최신인 11버전은
 최적화 문제로 제외하게 되었습니다

우선 선택하게 된 v8 모델에 대해 
설명 드리겠습니다.
V8모델의 특징을 CSPNet과 Decoupled head로 
들수 있습니다.
개선된 CSPNet은 기존의 CSPNet의 교차 결합
을 유지한채 계산 파라미터 수를 줄이고, 
BottleNeck의 1X1 컨볼루션을 개선하여 
정확도는 유지한채 연산량을 낮추었습니다.
또한 Depthwise Separable convolution을 도입하여 
일반 컨볼루션 연산량을 줄였지만,
비슷한 수준의 특징 추출 성능을 유지할수 있습니다.
Decopled head는 출력구조를 
분리된 헤드 구조를 통해
분류와 회귀를 독립적으로 처리하여 학습 효율성을 
향상시켰습니다.

위 표에서 보시다시피 
주황색으로 표기된 정확도도 높이고
계산 파라미터도 적어 
최종적으로 v8 모델을 선택하게 되었습니다.

앞썬 라벨링 데이터 2만장을 학습시킨 
저흿가 학습시킨 모델의 지표는 
모두 95 이상입니다 

이후 한정된 컴퓨팅 자원에서 
저희 모델의 제 성능을 
내기 위해 양자화를 시도 했습니다.
제가 시도한 양자화는 
가중치(weigt)와 활성화값(activation)이
FP32로 표현된 학습 모델을
PTQ(post-pretaintde-Quantiztion)을 통해
Int8로 변환시켰습니다.


다음 표에서 보시면
양자화를 시도한 경량화 모델은 
이전 모델과 비교해 성능을 떨어뜨리지 않았고,
처리속도를 약 30퍼센트 향상시켰습니다.
그리고 이 모델을 최종적으로 어플리케이션에
탑재할 모델로 선정하였습니다.